- name: php repo
  tags: setup
  apt_repository: repo='ppa:ondrej/php' update_cache=yes

- name: update apt
  tags: vagrant
  apt: update_cache=yes

- lineinfile:
    dest: /etc/environment
    line: 'SYMFONY__KERNEL__CACHE_DIR=/dev/shm/powerline/cache/%kernel.environment%'

- lineinfile:
    dest: /etc/environment
    line: 'SYMFONY__KERNEL__LOGS_DIR=/dev/shm/powerline/logs'

- name: install curl
  tags: vagrant
  apt: pkg=curl state=latest

- name: install project dependencies
  tags: vagrant
  apt: pkg={{ item }} state=latest
  with_items:
    - vim
    - git
    - nginx
    - php7.0
    - php7.0-common
    - php7.0-fpm
    - php7.0-cli
    - php7.0-curl
    - php7.0-gd
    - php7.0-mysql
    - php7.0-sqlite3
    - php7.0-intl
    - php7.0-bcmath
    - php7.0-xml
    - php7.0-mbstring
    - supervisor
    - rabbitmq-server
    - mysql-server-5.6

- name: fpm | configure pool
  tags: vagrant
  template: src=fpm.j2 dest="/etc/php5/fpm/pool.d/{{ project }}.conf"

- name: nginx | setup vhost
  tags: vagrant
  template: src=vhost.j2 dest="/etc/nginx/sites-available/{{ project }}"

- name: nginx | enable vhost
  tags: vagrant
  file: src=/etc/nginx/sites-available/{{ project }} path=/etc/nginx/sites-enabled/{{ project }} state=link

- name: nginx | restart
  tags: vagrant
  service: name=nginx state=restarted

- name: nginx | delete default
  file: path=/etc/nginx/sites-enabled/default state=absent
  tags: vagrant

- name: nginx | copy server crt
  copy: src=server.crt dest=/srv/server.crt
  tags: vagrant

- name: nginx | copy server key
  copy: src=server.key dest=/srv/server.key
  tags: vagrant

- name: fpm | restart
  tags: vagrant
  service: name=php5-fpm state=restarted

- name: rabbitmq | configure vhost
  tags: vagrant
  rabbitmq_vhost: name={{ project }} state=present

- name: rabbitmq | configure user
  tags: vagrant
  rabbitmq_user: user={{ project }}
                 password={{ project }}
                 vhost={{ project }}
                 configure_priv=.*
                 read_priv=.*
                 write_priv=.*
                 state=present

- name: composer | download composer
  get_url:
    url: https://getcomposer.org/installer
    dest: /tmp/installer
  tags: composer

- name: composer | install composer
  shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
  args:
    creates: /usr/local/bin/composer
  tags: composer

- name: composer | rename composer.phar to composer
  shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
  args:
    creates: /usr/local/bin/composer
  tags: composer

- name: composer | make composer executable
  file:
    path: /usr/local/bin/composer
    mode: a+x
    state: file
  tags: composer

- name: ssh | setup known_hosts
  tags: vagrant
  copy: src=known_hosts dest=/etc/ssh/ssh_known_hosts

- name: nginx | restart 
  tags: vagrant
  service: name=nginx state=restarted


- name: symfony | copy parameters
  tags: vagrant
  command: cp app/config/parameters.default.yml app/config/parameters.yml
  args:
    chdir: /vagrant/backend 

- name: composer | install dependancies
  become_user: civix
  tags: composer
  composer: command=install working_dir=/vagrant/backend
